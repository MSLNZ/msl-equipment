from ctypes import (c_int8, c_uint8, c_int16, c_uint16, c_int32, 
                    c_uint32, c_int64, c_uint64, c_float, c_double, c_void_p, POINTER)

from .pico_status import c_enum, PICO_STATUS, PICO_INFO

from .picoscope_callbacks import (GetOverviewBuffersMaxMin,
                                  ps2000aBlockReady,
                                  ps2000aStreamingReady,
                                  PS3000_CALLBACK_FUNC,
                                  ps3000aBlockReady,
                                  ps3000aStreamingReady,
                                  ps4000BlockReady,
                                  ps4000StreamingReady,
                                  ps4000aBlockReady,
                                  ps4000aStreamingReady,
                                  ps5000BlockReady,
                                  ps5000StreamingReady,
                                  ps5000aBlockReady,
                                  ps5000aStreamingReady,
                                  ps6000BlockReady,
                                  ps6000StreamingReady)

from .picoscope_structs import (PS2000ADigitalChannelDirections,
                                PS2000APwqConditions,
                                PS2000ATriggerChannelProperties,
                                PS2000ATriggerConditions,
                                PS2000PwqConditions,
                                PS2000TriggerChannelProperties,
                                PS2000TriggerConditions,
                                PS3000ADigitalChannelDirections,
                                PS3000APwqConditions,
                                PS3000APwqConditionsV2,
                                PS3000ATriggerChannelProperties,
                                PS3000ATriggerConditions,
                                PS3000ATriggerConditionsV2,
                                PS3000ATriggerInfo,
                                PS3000PwqConditions,
                                PS3000TriggerChannelProperties,
                                PS3000TriggerConditions,
                                PS4000AChannelLedSetting,
                                PS4000ACondition,
                                PS4000AConnectDetect,
                                PS4000ADirection,
                                PS4000ATriggerChannelProperties,
                                PS4000PwqConditions,
                                PS4000TriggerChannelProperties,
                                PS4000TriggerConditions,
                                PS5000APwqConditions,
                                PS5000ATriggerChannelProperties,
                                PS5000ATriggerConditions,
                                PS5000ATriggerInfo,
                                PS5000PwqConditions,
                                PS5000TriggerChannelProperties,
                                PS5000TriggerConditions,
                                PS6000PwqConditions,
                                PS6000TriggerChannelProperties,
                                PS6000TriggerConditions)


# The structure for each item in a *_funcptrs list is:
#
# (SDK_function_name, return_data_type, do_error_checking_on_returned_value?,
#    (ctype, SDK_type, SDK_argument_name),


# ************************ SDK functions for ps2000 ************************


ps2000_funcptrs = [
    ('ps2000PingUnit', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps2000SetAdvTriggerChannelConditions', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS2000TriggerConditions), 'PS2000_TRIGGER_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions')),
    ('ps2000SetAdvTriggerChannelDirections', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS2000_THRESHOLD_DIRECTION', 'channelA'),
        (c_enum, 'PS2000_THRESHOLD_DIRECTION', 'channelB'),
        (c_enum, 'PS2000_THRESHOLD_DIRECTION', 'channelC'),
        (c_enum, 'PS2000_THRESHOLD_DIRECTION', 'channelD'),
        (c_enum, 'PS2000_THRESHOLD_DIRECTION', 'ext')),
    ('ps2000SetAdvTriggerChannelProperties', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS2000TriggerChannelProperties), 'PS2000_TRIGGER_CHANNEL_PROPERTIES*', 'channelProperties'),
        (c_int16, 'int16_t', 'nChannelProperties'),
        (c_int32, 'int32_t', 'autoTriggerMilliseconds')),
    ('ps2000SetAdvTriggerDelay', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'delay'),
        (c_float, 'float', 'preTriggerDelay')),
    ('ps2000SetPulseWidthQualifier', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS2000PwqConditions), 'PS2000_PWQ_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'PS2000_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'lower'),
        (c_uint32, 'uint32_t', 'upper'),
        (c_enum, 'PS2000_PULSE_WIDTH_TYPE', 'type')),
    ('ps2000_close_unit', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps2000_flash_led', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps2000_get_streaming_last_values', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (GetOverviewBuffersMaxMin, 'GetOverviewBuffersMaxMin', 'lpGetOverviewBuffersMaxMin')),
    ('ps2000_get_streaming_values', c_uint32, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_double), 'double*', 'start_time'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_a_max'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_a_min'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_b_max'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_b_min'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_c_max'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_c_min'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_d_max'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_d_min'),
        (POINTER(c_int16), 'int16_t*', 'overflow'),
        (POINTER(c_uint32), 'uint32_t*', 'triggerAt'),
        (POINTER(c_int16), 'int16_t*', 'triggered'),
        (c_uint32, 'uint32_t', 'no_of_values'),
        (c_uint32, 'uint32_t', 'noOfSamplesPerAggregate')),
    ('ps2000_get_streaming_values_no_aggregation', c_uint32, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_double), 'double*', 'start_time'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_a'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_b'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_c'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_d'),
        (POINTER(c_int16), 'int16_t*', 'overflow'),
        (POINTER(c_uint32), 'uint32_t*', 'triggerAt'),
        (POINTER(c_int16), 'int16_t*', 'trigger'),
        (c_uint32, 'uint32_t', 'no_of_values')),
    ('ps2000_get_timebase', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'timebase'),
        (c_int32, 'int32_t', 'no_of_samples'),
        (POINTER(c_int32), 'int32_t*', 'time_interval'),
        (POINTER(c_int16), 'int16_t*', 'time_units'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'max_samples')),
    ('ps2000_get_times_and_values', c_int32, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int32), 'int32_t*', 'times'),
        (POINTER(c_int16), 'int16_t*', 'buffer_a'),
        (POINTER(c_int16), 'int16_t*', 'buffer_b'),
        (POINTER(c_int16), 'int16_t*', 'buffer_c'),
        (POINTER(c_int16), 'int16_t*', 'buffer_d'),
        (POINTER(c_int16), 'int16_t*', 'overflow'),
        (c_int16, 'int16_t', 'time_units'),
        (c_int32, 'int32_t', 'no_of_values')),
    ('ps2000_get_unit_info', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'string'),
        (c_int16, 'int16_t', 'string_length'),
        (c_int16, 'int16_t', 'line')),
    ('ps2000_get_values', c_int32, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'buffer_a'),
        (POINTER(c_int16), 'int16_t*', 'buffer_b'),
        (POINTER(c_int16), 'int16_t*', 'buffer_c'),
        (POINTER(c_int16), 'int16_t*', 'buffer_d'),
        (POINTER(c_int16), 'int16_t*', 'overflow'),
        (c_int32, 'int32_t', 'no_of_values')),
    ('ps2000_last_button_press', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps2000_open_unit', c_int16, False,
        (c_void_p, 'void', '')),
    ('ps2000_open_unit_async', c_int16, False,
        (c_void_p, 'void', '')),
    ('ps2000_open_unit_progress', c_int16, False,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'progress_percent')),
    ('ps2000_overview_buffer_status', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'previous_buffer_overrun')),
    ('ps2000_ready', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps2000_run_block', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'no_of_values'),
        (c_int16, 'int16_t', 'timebase'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'time_indisposed_ms')),
    ('ps2000_run_streaming', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'sample_interval_ms'),
        (c_int32, 'int32_t', 'max_samples'),
        (c_int16, 'int16_t', 'windowed')),
    ('ps2000_run_streaming_ns', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'sample_interval'),
        (c_enum, 'PS2000_TIME_UNITS', 'time_units'),
        (c_uint32, 'uint32_t', 'max_samples'),
        (c_int16, 'int16_t', 'auto_stop'),
        (c_uint32, 'uint32_t', 'noOfSamplesPerAggregate')),
    ('ps2000_set_channel', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_int16, 'int16_t', 'dc'),
        (c_int16, 'int16_t', 'range')),
    ('ps2000_set_ets', c_int32, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'mode'),
        (c_int16, 'int16_t', 'ets_cycles'),
        (c_int16, 'int16_t', 'ets_interleave')),
    ('ps2000_set_led', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'state')),
    ('ps2000_set_light', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'state')),
    ('ps2000_set_sig_gen_arbitrary', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (POINTER(c_uint8), 'uint8_t*', 'arbitraryWaveform'),
        (c_int32, 'int32_t', 'arbitraryWaveformSize'),
        (c_enum, 'PS2000_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'sweeps')),
    ('ps2000_set_sig_gen_built_in', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_enum, 'PS2000_WAVE_TYPE', 'waveType'),
        (c_float, 'float', 'startFrequency'),
        (c_float, 'float', 'stopFrequency'),
        (c_float, 'float', 'increment'),
        (c_float, 'float', 'dwellTime'),
        (c_enum, 'PS2000_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'sweeps')),
    ('ps2000_set_trigger', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_int16, 'int16_t', 'direction'),
        (c_int16, 'int16_t', 'delay'),
        (c_int16, 'int16_t', 'auto_trigger_ms')),
    ('ps2000_set_trigger2', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_int16, 'int16_t', 'direction'),
        (c_float, 'float', 'delay'),
        (c_int16, 'int16_t', 'auto_trigger_ms')),
    ('ps2000_stop', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
]


# ************************ SDK functions for ps2000aApi ************************


ps2000aApi_funcptrs = [
    ('ps2000aCloseUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps2000aEnumerateUnits', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'count'),
        (POINTER(c_int8), 'int8_t*', 'serials'),
        (POINTER(c_int16), 'int16_t*', 'serialLth')),
    ('ps2000aFlashLed', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'start')),
    ('ps2000aGetAnalogueOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS2000A_RANGE', 'range'),
        (c_enum, 'PS2000A_COUPLING', 'coupling'),
        (POINTER(c_float), 'float*', 'maximumVoltage'),
        (POINTER(c_float), 'float*', 'minimumVoltage')),
    ('ps2000aGetChannelInformation', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS2000A_CHANNEL_INFO', 'info'),
        (c_int32, 'int32_t', 'probe'),
        (POINTER(c_int32), 'int32_t*', 'ranges'),
        (POINTER(c_int32), 'int32_t*', 'length'),
        (c_int32, 'int32_t', 'channels')),
    ('ps2000aGetMaxDownSampleRatio', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'noOfUnaggreatedSamples'),
        (POINTER(c_uint32), 'uint32_t*', 'maxDownSampleRatio'),
        (c_enum, 'PS2000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps2000aGetMaxSegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint16), 'uint16_t*', 'maxSegments')),
    ('ps2000aGetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'nCaptures')),
    ('ps2000aGetNoOfProcessedCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'nProcessedCaptures')),
    ('ps2000aGetStreamingLatestValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (ps2000aStreamingReady, 'ps2000aStreamingReady', 'lpPs'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps2000aGetTimebase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_int32), 'int32_t*', 'timeIntervalNanoseconds'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps2000aGetTimebase2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_float), 'float*', 'timeIntervalNanoseconds'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps2000aGetTriggerTimeOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (POINTER(c_enum), 'PS2000A_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps2000aGetTriggerTimeOffset64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'time'),
        (POINTER(c_enum), 'PS2000A_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps2000aGetUnitInfo', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'string'),
        (c_int16, 'int16_t', 'stringLength'),
        (POINTER(c_int16), 'int16_t*', 'requiredSize'),
        (PICO_INFO, 'PICO_INFO', 'info')),
    ('ps2000aGetValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS2000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps2000aGetValuesAsync', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (c_uint32, 'uint32_t', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_int16, 'int16_t', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (POINTER(c_void_p), 'void*', 'lpDataReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps2000aGetValuesBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS2000A_RATIO_MODE', 'downSampleRatioMode'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps2000aGetValuesOverlapped', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS2000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps2000aGetValuesOverlappedBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS2000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps2000aGetValuesTriggerTimeOffsetBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timesUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timesLower'),
        (POINTER(c_enum), 'PS2000A_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex')),
    ('ps2000aGetValuesTriggerTimeOffsetBulk64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'times'),
        (POINTER(c_enum), 'PS2000A_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex')),
    ('ps2000aHoldOff', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint64, 'uint64_t', 'holdoff'),
        (c_enum, 'PS2000A_HOLDOFF_TYPE', 'type')),
    ('ps2000aIsReady', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'ready')),
    ('ps2000aIsTriggerOrPulseWidthQualifierEnabled', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'triggerEnabled'),
        (POINTER(c_int16), 'int16_t*', 'pulseWidthQualifierEnabled')),
    ('ps2000aMaximumValue', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'value')),
    ('ps2000aMemorySegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint16, 'uint16_t', 'nSegments'),
        (POINTER(c_int32), 'int32_t*', 'nMaxSamples')),
    ('ps2000aMinimumValue', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'value')),
    ('ps2000aNoOfStreamingValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfValues')),
    ('ps2000aOpenUnit', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'serial')),
    ('ps2000aOpenUnitAsync', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'status'),
        (POINTER(c_int8), 'int8_t*', 'serial')),
    ('ps2000aOpenUnitProgress', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'progressPercent'),
        (POINTER(c_int16), 'int16_t*', 'complete')),
    ('ps2000aPingUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps2000aRunBlock', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'noOfPreTriggerSamples'),
        (c_int32, 'int32_t', 'noOfPostTriggerSamples'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'timeIndisposedMs'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (ps2000aBlockReady, 'ps2000aBlockReady', 'lpReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps2000aRunStreaming', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'sampleInterval'),
        (c_enum, 'PS2000A_TIME_UNITS', 'sampleIntervalTimeUnits'),
        (c_uint32, 'uint32_t', 'maxPreTriggerSamples'),
        (c_uint32, 'uint32_t', 'maxPostPreTriggerSamples'),
        (c_int16, 'int16_t', 'autoStop'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS2000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'overviewBufferSize')),
    ('ps2000aSetChannel', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS2000A_CHANNEL', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_enum, 'PS2000A_COUPLING', 'type'),
        (c_enum, 'PS2000A_RANGE', 'range'),
        (c_float, 'float', 'analogOffset')),
    ('ps2000aSetDataBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'channelOrPort'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (c_enum, 'PS2000A_RATIO_MODE', 'mode')),
    ('ps2000aSetDataBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'channelOrPort'),
        (POINTER(c_int16), 'int16_t*', 'bufferMax'),
        (POINTER(c_int16), 'int16_t*', 'bufferMin'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (c_enum, 'PS2000A_RATIO_MODE', 'mode')),
    ('ps2000aSetDigitalAnalogTriggerOperand', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS2000A_TRIGGER_OPERAND', 'operand')),
    ('ps2000aSetDigitalPort', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS2000A_DIGITAL_PORT', 'port'),
        (c_int16, 'int16_t', 'enabled'),
        (c_int16, 'int16_t', 'logicLevel')),
    ('ps2000aSetEts', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS2000A_ETS_MODE', 'mode'),
        (c_int16, 'int16_t', 'etsCycles'),
        (c_int16, 'int16_t', 'etsInterleave'),
        (POINTER(c_int32), 'int32_t*', 'sampleTimePicoseconds')),
    ('ps2000aSetEtsTimeBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps2000aSetEtsTimeBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps2000aSetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint16, 'uint16_t', 'nCaptures')),
    ('ps2000aSetPulseWidthQualifier', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS2000APwqConditions), 'PS2000A_PWQ_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'PS2000A_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'lower'),
        (c_uint32, 'uint32_t', 'upper'),
        (c_enum, 'PS2000A_PULSE_WIDTH_TYPE', 'type')),
    ('ps2000aSetSigGenArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (POINTER(c_int16), 'int16_t*', 'arbitraryWaveform'),
        (c_int32, 'int32_t', 'arbitraryWaveformSize'),
        (c_enum, 'PS2000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS2000A_EXTRA_OPERATIONS', 'operation'),
        (c_enum, 'PS2000A_INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS2000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS2000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps2000aSetSigGenBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_int16, 'int16_t', 'waveType'),
        (c_float, 'float', 'startFrequency'),
        (c_float, 'float', 'stopFrequency'),
        (c_float, 'float', 'increment'),
        (c_float, 'float', 'dwellTime'),
        (c_enum, 'PS2000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS2000A_EXTRA_OPERATIONS', 'operation'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS2000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS2000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps2000aSetSigGenBuiltInV2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_int16, 'int16_t', 'waveType'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'PS2000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS2000A_EXTRA_OPERATIONS', 'operation'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS2000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS2000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps2000aSetSigGenPropertiesArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (c_enum, 'PS2000A_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS2000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS2000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps2000aSetSigGenPropertiesBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'PS2000A_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS2000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS2000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps2000aSetSimpleTrigger', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'enable'),
        (c_enum, 'PS2000A_CHANNEL', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_enum, 'PS2000A_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'delay'),
        (c_int16, 'int16_t', 'autoTrigger_ms')),
    ('ps2000aSetTriggerChannelConditions', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS2000ATriggerConditions), 'PS2000A_TRIGGER_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions')),
    ('ps2000aSetTriggerChannelDirections', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS2000A_THRESHOLD_DIRECTION', 'channelA'),
        (c_enum, 'PS2000A_THRESHOLD_DIRECTION', 'channelB'),
        (c_enum, 'PS2000A_THRESHOLD_DIRECTION', 'channelC'),
        (c_enum, 'PS2000A_THRESHOLD_DIRECTION', 'channelD'),
        (c_enum, 'PS2000A_THRESHOLD_DIRECTION', 'ext'),
        (c_enum, 'PS2000A_THRESHOLD_DIRECTION', 'aux')),
    ('ps2000aSetTriggerChannelProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS2000ATriggerChannelProperties), 'PS2000A_TRIGGER_CHANNEL_PROPERTIES*', 'channelProperties'),
        (c_int16, 'int16_t', 'nChannelProperties'),
        (c_int16, 'int16_t', 'auxOutputEnable'),
        (c_int32, 'int32_t', 'autoTriggerMilliseconds')),
    ('ps2000aSetTriggerDelay', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'delay')),
    ('ps2000aSetTriggerDigitalPortProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS2000ADigitalChannelDirections), 'PS2000A_DIGITAL_CHANNEL_DIRECTIONS*', 'directions'),
        (c_int16, 'int16_t', 'nDirections')),
    ('ps2000aSigGenArbitraryMinMaxValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'minArbitraryWaveformValue'),
        (POINTER(c_int16), 'int16_t*', 'maxArbitraryWaveformValue'),
        (POINTER(c_uint32), 'uint32_t*', 'minArbitraryWaveformSize'),
        (POINTER(c_uint32), 'uint32_t*', 'maxArbitraryWaveformSize')),
    ('ps2000aSigGenFrequencyToPhase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'frequency'),
        (c_enum, 'PS2000A_INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'bufferLength'),
        (POINTER(c_uint32), 'uint32_t*', 'phase')),
    ('ps2000aSigGenSoftwareControl', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'state')),
    ('ps2000aStop', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
]


# ************************ SDK functions for ps3000 ************************


ps3000_funcptrs = [
    ('ps3000PingUnit', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps3000SetAdvTriggerChannelConditions', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000TriggerConditions), 'TRIGGER_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions')),
    ('ps3000SetAdvTriggerChannelDirections', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelA'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelB'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelC'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelD'),
        (c_enum, 'THRESHOLD_DIRECTION', 'ext')),
    ('ps3000SetAdvTriggerChannelProperties', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000TriggerChannelProperties), 'TRIGGER_CHANNEL_PROPERTIES*', 'channelProperties'),
        (c_int16, 'int16_t', 'nChannelProperties'),
        (c_int32, 'int32_t', 'autoTriggerMilliseconds')),
    ('ps3000SetAdvTriggerDelay', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'delay'),
        (c_float, 'float', 'preTriggerDelay')),
    ('ps3000SetPulseWidthQualifier', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000PwqConditions), 'PWQ_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'lower'),
        (c_uint32, 'uint32_t', 'upper'),
        (c_enum, 'PULSE_WIDTH_TYPE', 'type')),
    ('ps3000_close_unit', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps3000_flash_led', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps3000_get_streaming_last_values', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (GetOverviewBuffersMaxMin, 'GetOverviewBuffersMaxMin', 'lpGetOverviewBuffersMaxMin')),
    ('ps3000_get_streaming_values', c_uint32, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_double), 'double*', 'start_time'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_a_max'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_a_min'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_b_max'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_b_min'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_c_max'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_c_min'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_d_max'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_d_min'),
        (POINTER(c_int16), 'int16_t*', 'overflow'),
        (POINTER(c_uint32), 'uint32_t*', 'triggerAt'),
        (POINTER(c_int16), 'int16_t*', 'triggered'),
        (c_uint32, 'uint32_t', 'no_of_values'),
        (c_uint32, 'uint32_t', 'noOfSamplesPerAggregate')),
    ('ps3000_get_streaming_values_no_aggregation', c_uint32, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_double), 'double*', 'start_time'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_a'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_b'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_c'),
        (POINTER(c_int16), 'int16_t*', 'pbuffer_d'),
        (POINTER(c_int16), 'int16_t*', 'overflow'),
        (POINTER(c_uint32), 'uint32_t*', 'triggerAt'),
        (POINTER(c_int16), 'int16_t*', 'trigger'),
        (c_uint32, 'uint32_t', 'no_of_values')),
    ('ps3000_get_timebase', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'timebase'),
        (c_int32, 'int32_t', 'no_of_samples'),
        (POINTER(c_int32), 'int32_t*', 'time_interval'),
        (POINTER(c_int16), 'int16_t*', 'time_units'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'max_samples')),
    ('ps3000_get_times_and_values', c_int32, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int32), 'int32_t*', 'times'),
        (POINTER(c_int16), 'int16_t*', 'buffer_a'),
        (POINTER(c_int16), 'int16_t*', 'buffer_b'),
        (POINTER(c_int16), 'int16_t*', 'buffer_c'),
        (POINTER(c_int16), 'int16_t*', 'buffer_d'),
        (POINTER(c_int16), 'int16_t*', 'overflow'),
        (c_int16, 'int16_t', 'time_units'),
        (c_int32, 'int32_t', 'no_of_values')),
    ('ps3000_get_unit_info', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'string'),
        (c_int16, 'int16_t', 'string_length'),
        (c_int16, 'int16_t', 'line')),
    ('ps3000_get_values', c_int32, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'buffer_a'),
        (POINTER(c_int16), 'int16_t*', 'buffer_b'),
        (POINTER(c_int16), 'int16_t*', 'buffer_c'),
        (POINTER(c_int16), 'int16_t*', 'buffer_d'),
        (POINTER(c_int16), 'int16_t*', 'overflow'),
        (c_int32, 'int32_t', 'no_of_values')),
    ('ps3000_open_unit', c_int16, False,
        (c_void_p, 'void', '')),
    ('ps3000_open_unit_async', c_int16, False,
        (c_void_p, 'void', '')),
    ('ps3000_open_unit_progress', c_int16, False,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'progress_percent')),
    ('ps3000_overview_buffer_status', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'previous_buffer_overrun')),
    ('ps3000_ready', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps3000_release_stream_buffer', c_void_p, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps3000_run_block', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'no_of_values'),
        (c_int16, 'int16_t', 'timebase'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'time_indisposed_ms')),
    ('ps3000_run_streaming', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'sample_interval_ms'),
        (c_int32, 'int32_t', 'max_samples'),
        (c_int16, 'int16_t', 'windowed')),
    ('ps3000_run_streaming_ns', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'sample_interval'),
        (c_enum, 'PS3000_TIME_UNITS', 'time_units'),
        (c_uint32, 'uint32_t', 'max_samples'),
        (c_int16, 'int16_t', 'auto_stop'),
        (c_uint32, 'uint32_t', 'noOfSamplesPerAggregate'),
        (c_uint32, 'uint32_t', 'overview_buffer_size')),
    ('ps3000_save_streaming_data', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (PS3000_CALLBACK_FUNC, 'PS3000_CALLBACK_FUNC', 'lpCallbackFunc'),
        (POINTER(c_int16), 'int16_t*', 'dataBuffers'),
        (c_int16, 'int16_t', 'dataBufferSize')),
    ('ps3000_set_channel', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_int16, 'int16_t', 'dc'),
        (c_int16, 'int16_t', 'range')),
    ('ps3000_set_ets', c_int32, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'mode'),
        (c_int16, 'int16_t', 'ets_cycles'),
        (c_int16, 'int16_t', 'ets_interleave')),
    ('ps3000_set_siggen', c_int32, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'wave_type'),
        (c_int32, 'int32_t', 'start_frequency'),
        (c_int32, 'int32_t', 'stop_frequency'),
        (c_float, 'float', 'increment'),
        (c_int16, 'int16_t', 'dwell_time'),
        (c_int16, 'int16_t', 'repeat'),
        (c_int16, 'int16_t', 'dual_slope')),
    ('ps3000_set_trigger', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_int16, 'int16_t', 'direction'),
        (c_int16, 'int16_t', 'delay'),
        (c_int16, 'int16_t', 'auto_trigger_ms')),
    ('ps3000_set_trigger2', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_int16, 'int16_t', 'direction'),
        (c_float, 'float', 'delay'),
        (c_int16, 'int16_t', 'auto_trigger_ms')),
    ('ps3000_stop', c_int16, False,
        (c_int16, 'int16_t', 'handle')),
    ('ps3000_streaming_ns_get_interval_stateless', c_int16, False,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'nChannels'),
        (POINTER(c_uint32), 'uint32_t*', 'sample_interval')),
]


# ************************ SDK functions for ps3000aApi ************************


ps3000aApi_funcptrs = [
    ('ps3000aChangePowerSource', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (PICO_STATUS, 'PICO_STATUS', 'powerState')),
    ('ps3000aCloseUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps3000aCurrentPowerSource', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps3000aEnumerateUnits', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'count'),
        (POINTER(c_int8), 'int8_t*', 'serials'),
        (POINTER(c_int16), 'int16_t*', 'serialLth')),
    ('ps3000aFlashLed', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'start')),
    ('ps3000aGetAnalogueOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS3000A_RANGE', 'range'),
        (c_enum, 'PS3000A_COUPLING', 'coupling'),
        (POINTER(c_float), 'float*', 'maximumVoltage'),
        (POINTER(c_float), 'float*', 'minimumVoltage')),
    ('ps3000aGetChannelInformation', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS3000A_CHANNEL_INFO', 'info'),
        (c_int32, 'int32_t', 'probe'),
        (POINTER(c_int32), 'int32_t*', 'ranges'),
        (POINTER(c_int32), 'int32_t*', 'length'),
        (c_int32, 'int32_t', 'channels')),
    ('ps3000aGetMaxDownSampleRatio', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'noOfUnaggreatedSamples'),
        (POINTER(c_uint32), 'uint32_t*', 'maxDownSampleRatio'),
        (c_enum, 'PS3000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps3000aGetMaxEtsValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'etsCycles'),
        (POINTER(c_int16), 'int16_t*', 'etsInterleave')),
    ('ps3000aGetMaxSegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'maxSegments')),
    ('ps3000aGetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'nCaptures')),
    ('ps3000aGetNoOfProcessedCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'nProcessedCaptures')),
    ('ps3000aGetStreamingLatestValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (ps3000aStreamingReady, 'ps3000aStreamingReady', 'lpPs'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps3000aGetTimebase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_int32), 'int32_t*', 'timeIntervalNanoseconds'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps3000aGetTimebase2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_float), 'float*', 'timeIntervalNanoseconds'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps3000aGetTriggerInfoBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000ATriggerInfo), 'PS3000A_TRIGGER_INFO*', 'triggerInfo'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex')),
    ('ps3000aGetTriggerTimeOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (POINTER(c_enum), 'PS3000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps3000aGetTriggerTimeOffset64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'time'),
        (POINTER(c_enum), 'PS3000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps3000aGetUnitInfo', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'string'),
        (c_int16, 'int16_t', 'stringLength'),
        (POINTER(c_int16), 'int16_t*', 'requiredSize'),
        (PICO_INFO, 'PICO_INFO', 'info')),
    ('ps3000aGetValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS3000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps3000aGetValuesAsync', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (c_uint32, 'uint32_t', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_int16, 'int16_t', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_void_p), 'void*', 'lpDataReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps3000aGetValuesBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS3000A_RATIO_MODE', 'downSampleRatioMode'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps3000aGetValuesOverlapped', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS3000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps3000aGetValuesOverlappedBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS3000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps3000aGetValuesTriggerTimeOffsetBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timesUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timesLower'),
        (POINTER(c_enum), 'PS3000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex')),
    ('ps3000aGetValuesTriggerTimeOffsetBulk64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'times'),
        (POINTER(c_enum), 'PS3000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex')),
    ('ps3000aHoldOff', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint64, 'uint64_t', 'holdoff'),
        (c_enum, 'PS3000A_HOLDOFF_TYPE', 'type')),
    ('ps3000aIsReady', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'ready')),
    ('ps3000aIsTriggerOrPulseWidthQualifierEnabled', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'triggerEnabled'),
        (POINTER(c_int16), 'int16_t*', 'pulseWidthQualifierEnabled')),
    ('ps3000aMaximumValue', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'value')),
    ('ps3000aMemorySegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'nSegments'),
        (POINTER(c_int32), 'int32_t*', 'nMaxSamples')),
    ('ps3000aMinimumValue', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'value')),
    ('ps3000aNoOfStreamingValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfValues')),
    ('ps3000aOpenUnit', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'serial')),
    ('ps3000aOpenUnitAsync', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'status'),
        (POINTER(c_int8), 'int8_t*', 'serial')),
    ('ps3000aOpenUnitProgress', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'progressPercent'),
        (POINTER(c_int16), 'int16_t*', 'complete')),
    ('ps3000aPingUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps3000aRunBlock', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'noOfPreTriggerSamples'),
        (c_int32, 'int32_t', 'noOfPostTriggerSamples'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'timeIndisposedMs'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (ps3000aBlockReady, 'ps3000aBlockReady', 'lpReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps3000aRunStreaming', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'sampleInterval'),
        (c_enum, 'PS3000A_TIME_UNITS', 'sampleIntervalTimeUnits'),
        (c_uint32, 'uint32_t', 'maxPreTriggerSamples'),
        (c_uint32, 'uint32_t', 'maxPostPreTriggerSamples'),
        (c_int16, 'int16_t', 'autoStop'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS3000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'overviewBufferSize')),
    ('ps3000aSetBandwidthFilter', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS3000A_CHANNEL', 'channel'),
        (c_enum, 'PS3000A_BANDWIDTH_LIMITER', 'bandwidth')),
    ('ps3000aSetChannel', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS3000A_CHANNEL', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_enum, 'PS3000A_COUPLING', 'type'),
        (c_enum, 'PS3000A_RANGE', 'range'),
        (c_float, 'float', 'analogOffset')),
    ('ps3000aSetDataBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS3000A_CHANNEL', 'channelOrPort'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (c_enum, 'PS3000A_RATIO_MODE', 'mode')),
    ('ps3000aSetDataBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS3000A_CHANNEL', 'channelOrPort'),
        (POINTER(c_int16), 'int16_t*', 'bufferMax'),
        (POINTER(c_int16), 'int16_t*', 'bufferMin'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (c_enum, 'PS3000A_RATIO_MODE', 'mode')),
    ('ps3000aSetDigitalPort', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS3000A_DIGITAL_PORT', 'port'),
        (c_int16, 'int16_t', 'enabled'),
        (c_int16, 'int16_t', 'logicLevel')),
    ('ps3000aSetEts', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS3000A_ETS_MODE', 'mode'),
        (c_int16, 'int16_t', 'etsCycles'),
        (c_int16, 'int16_t', 'etsInterleave'),
        (POINTER(c_int32), 'int32_t*', 'sampleTimePicoseconds')),
    ('ps3000aSetEtsTimeBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps3000aSetEtsTimeBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps3000aSetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'nCaptures')),
    ('ps3000aSetPulseWidthDigitalPortProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000ADigitalChannelDirections), 'PS3000A_DIGITAL_CHANNEL_DIRECTIONS*', 'directions'),
        (c_int16, 'int16_t', 'nDirections')),
    ('ps3000aSetPulseWidthQualifier', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000APwqConditions), 'PS3000A_PWQ_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'PS3000A_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'lower'),
        (c_uint32, 'uint32_t', 'upper'),
        (c_enum, 'PS3000A_PULSE_WIDTH_TYPE', 'type')),
    ('ps3000aSetPulseWidthQualifierV2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000APwqConditionsV2), 'PS3000A_PWQ_CONDITIONS_V2*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'PS3000A_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'lower'),
        (c_uint32, 'uint32_t', 'upper'),
        (c_enum, 'PS3000A_PULSE_WIDTH_TYPE', 'type')),
    ('ps3000aSetSigGenArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (POINTER(c_int16), 'int16_t*', 'arbitraryWaveform'),
        (c_int32, 'int32_t', 'arbitraryWaveformSize'),
        (c_enum, 'PS3000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS3000A_EXTRA_OPERATIONS', 'operation'),
        (c_enum, 'PS3000A_INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS3000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS3000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps3000aSetSigGenBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_int16, 'int16_t', 'waveType'),
        (c_float, 'float', 'startFrequency'),
        (c_float, 'float', 'stopFrequency'),
        (c_float, 'float', 'increment'),
        (c_float, 'float', 'dwellTime'),
        (c_enum, 'PS3000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS3000A_EXTRA_OPERATIONS', 'operation'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS3000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS3000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps3000aSetSigGenBuiltInV2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_int16, 'int16_t', 'waveType'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'PS3000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS3000A_EXTRA_OPERATIONS', 'operation'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS3000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS3000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps3000aSetSigGenPropertiesArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (c_enum, 'PS3000A_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS3000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS3000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps3000aSetSigGenPropertiesBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'PS3000A_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS3000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS3000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps3000aSetSimpleTrigger', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'enable'),
        (c_enum, 'PS3000A_CHANNEL', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_enum, 'PS3000A_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'delay'),
        (c_int16, 'int16_t', 'autoTrigger_ms')),
    ('ps3000aSetTriggerChannelConditions', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000ATriggerConditions), 'PS3000A_TRIGGER_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions')),
    ('ps3000aSetTriggerChannelConditionsV2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000ATriggerConditionsV2), 'PS3000A_TRIGGER_CONDITIONS_V2*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions')),
    ('ps3000aSetTriggerChannelDirections', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS3000A_THRESHOLD_DIRECTION', 'channelA'),
        (c_enum, 'PS3000A_THRESHOLD_DIRECTION', 'channelB'),
        (c_enum, 'PS3000A_THRESHOLD_DIRECTION', 'channelC'),
        (c_enum, 'PS3000A_THRESHOLD_DIRECTION', 'channelD'),
        (c_enum, 'PS3000A_THRESHOLD_DIRECTION', 'ext'),
        (c_enum, 'PS3000A_THRESHOLD_DIRECTION', 'aux')),
    ('ps3000aSetTriggerChannelProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000ATriggerChannelProperties), 'PS3000A_TRIGGER_CHANNEL_PROPERTIES*', 'channelProperties'),
        (c_int16, 'int16_t', 'nChannelProperties'),
        (c_int16, 'int16_t', 'auxOutputEnable'),
        (c_int32, 'int32_t', 'autoTriggerMilliseconds')),
    ('ps3000aSetTriggerDelay', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'delay')),
    ('ps3000aSetTriggerDigitalPortProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS3000ADigitalChannelDirections), 'PS3000A_DIGITAL_CHANNEL_DIRECTIONS*', 'directions'),
        (c_int16, 'int16_t', 'nDirections')),
    ('ps3000aSigGenArbitraryMinMaxValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'minArbitraryWaveformValue'),
        (POINTER(c_int16), 'int16_t*', 'maxArbitraryWaveformValue'),
        (POINTER(c_uint32), 'uint32_t*', 'minArbitraryWaveformSize'),
        (POINTER(c_uint32), 'uint32_t*', 'maxArbitraryWaveformSize')),
    ('ps3000aSigGenFrequencyToPhase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'frequency'),
        (c_enum, 'PS3000A_INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'bufferLength'),
        (POINTER(c_uint32), 'uint32_t*', 'phase')),
    ('ps3000aSigGenSoftwareControl', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'state')),
    ('ps3000aStop', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
]


# ************************ SDK functions for ps4000Api ************************


ps4000Api_funcptrs = [
    ('ps4000CloseUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps4000EnumerateUnits', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'count'),
        (POINTER(c_int8), 'int8_t*', 'serials'),
        (POINTER(c_int16), 'int16_t*', 'serialLth')),
    ('ps4000FlashLed', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'start')),
    ('ps4000GetChannelInformation', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_CHANNEL_INFO', 'info'),
        (c_int32, 'int32_t', 'probe'),
        (POINTER(c_int32), 'int32_t*', 'ranges'),
        (POINTER(c_int32), 'int32_t*', 'length'),
        (c_int32, 'int32_t', 'channels')),
    ('ps4000GetMaxDownSampleRatio', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'noOfUnaggreatedSamples'),
        (POINTER(c_uint32), 'uint32_t*', 'maxDownSampleRatio'),
        (c_int16, 'int16_t', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps4000GetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint16), 'uint16_t*', 'nCaptures')),
    ('ps4000GetProbe', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_enum), 'PS4000_PROBE*', 'probe')),
    ('ps4000GetStreamingLatestValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (ps4000StreamingReady, 'ps4000StreamingReady', 'lpPs'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps4000GetTimebase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_int32), 'int32_t*', 'timeIntervalNanoseconds'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps4000GetTimebase2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_float), 'float*', 'timeIntervalNanoseconds'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps4000GetTriggerChannelTimeOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (POINTER(c_enum), 'PS4000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (c_enum, 'PS4000_CHANNEL', 'channel')),
    ('ps4000GetTriggerChannelTimeOffset64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'time'),
        (POINTER(c_enum), 'PS4000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (c_enum, 'PS4000_CHANNEL', 'channel')),
    ('ps4000GetTriggerTimeOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (POINTER(c_enum), 'PS4000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps4000GetTriggerTimeOffset64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'time'),
        (POINTER(c_enum), 'PS4000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps4000GetUnitInfo', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'string'),
        (c_int16, 'int16_t', 'stringLength'),
        (POINTER(c_int16), 'int16_t*', 'requiredSize'),
        (PICO_INFO, 'PICO_INFO', 'info')),
    ('ps4000GetValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_int16, 'int16_t', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps4000GetValuesAsync', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (c_uint32, 'uint32_t', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_int16, 'int16_t', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (POINTER(c_void_p), 'void*', 'lpDataReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps4000GetValuesBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps4000GetValuesTriggerChannelTimeOffsetBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timesUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timesLower'),
        (POINTER(c_enum), 'PS4000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex'),
        (c_enum, 'PS4000_CHANNEL', 'channel')),
    ('ps4000GetValuesTriggerChannelTimeOffsetBulk64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'times'),
        (POINTER(c_enum), 'PS4000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex'),
        (c_enum, 'PS4000_CHANNEL', 'channel')),
    ('ps4000GetValuesTriggerTimeOffsetBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timesUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timesLower'),
        (POINTER(c_enum), 'PS4000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex')),
    ('ps4000GetValuesTriggerTimeOffsetBulk64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'times'),
        (POINTER(c_enum), 'PS4000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex')),
    ('ps4000HoldOff', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint64, 'uint64_t', 'holdoff'),
        (c_enum, 'PS4000_HOLDOFF_TYPE', 'type')),
    ('ps4000IsLedFlashing', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'status')),
    ('ps4000IsReady', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'ready')),
    ('ps4000IsTriggerOrPulseWidthQualifierEnabled', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'triggerEnabled'),
        (POINTER(c_int16), 'int16_t*', 'pulseWidthQualifierEnabled')),
    ('ps4000MemorySegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint16, 'uint16_t', 'nSegments'),
        (POINTER(c_int32), 'int32_t*', 'nMaxSamples')),
    ('ps4000NoOfStreamingValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfValues')),
    ('ps4000OpenUnit', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle')),
    ('ps4000OpenUnitAsync', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'status')),
    ('ps4000OpenUnitAsyncEx', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'status'),
        (POINTER(c_int8), 'int8_t*', 'serial')),
    ('ps4000OpenUnitEx', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'serial')),
    ('ps4000OpenUnitProgress', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'progressPercent'),
        (POINTER(c_int16), 'int16_t*', 'complete')),
    ('ps4000PingUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps4000RunBlock', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'noOfPreTriggerSamples'),
        (c_int32, 'int32_t', 'noOfPostTriggerSamples'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'timeIndisposedMs'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (ps4000BlockReady, 'ps4000BlockReady', 'lpReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps4000RunStreaming', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'sampleInterval'),
        (c_enum, 'PS4000_TIME_UNITS', 'sampleIntervalTimeUnits'),
        (c_uint32, 'uint32_t', 'maxPreTriggerSamples'),
        (c_uint32, 'uint32_t', 'maxPostPreTriggerSamples'),
        (c_int16, 'int16_t', 'autoStop'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_uint32, 'uint32_t', 'overviewBufferSize')),
    ('ps4000RunStreamingEx', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'sampleInterval'),
        (c_enum, 'PS4000_TIME_UNITS', 'sampleIntervalTimeUnits'),
        (c_uint32, 'uint32_t', 'maxPreTriggerSamples'),
        (c_uint32, 'uint32_t', 'maxPostPreTriggerSamples'),
        (c_int16, 'int16_t', 'autoStop'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_int16, 'int16_t', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'overviewBufferSize')),
    ('ps4000SetBwFilter', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_CHANNEL', 'channel'),
        (c_int16, 'int16_t', 'enable')),
    ('ps4000SetChannel', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_CHANNEL', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_int16, 'int16_t', 'dc'),
        (c_enum, 'PS4000_RANGE', 'range')),
    ('ps4000SetDataBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps4000SetDataBufferBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_uint16, 'uint16_t', 'waveform')),
    ('ps4000SetDataBufferWithMode', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_enum, 'RATIO_MODE', 'mode')),
    ('ps4000SetDataBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'bufferMax'),
        (POINTER(c_int16), 'int16_t*', 'bufferMin'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps4000SetDataBuffersWithMode', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'bufferMax'),
        (POINTER(c_int16), 'int16_t*', 'bufferMin'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_enum, 'RATIO_MODE', 'mode')),
    ('ps4000SetEts', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_ETS_MODE', 'mode'),
        (c_int16, 'int16_t', 'etsCycles'),
        (c_int16, 'int16_t', 'etsInterleave'),
        (POINTER(c_int32), 'int32_t*', 'sampleTimePicoseconds')),
    ('ps4000SetEtsTimeBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps4000SetEtsTimeBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps4000SetExtTriggerRange', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_RANGE', 'extRange')),
    ('ps4000SetFrequencyCounter', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_CHANNEL', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_enum, 'PS4000_FREQUENCY_COUNTER_RANGE', 'range'),
        (c_int16, 'int16_t', 'thresholdMajor'),
        (c_int16, 'int16_t', 'thresholdMinor')),
    ('ps4000SetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint16, 'uint16_t', 'nCaptures')),
    ('ps4000SetProbe', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000_PROBE', 'probe'),
        (c_enum, 'PS4000_RANGE', 'range')),
    ('ps4000SetPulseWidthQualifier', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS4000PwqConditions), 'PWQ_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'lower'),
        (c_uint32, 'uint32_t', 'upper'),
        (c_enum, 'PULSE_WIDTH_TYPE', 'type')),
    ('ps4000SetSigGenArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (POINTER(c_int16), 'int16_t*', 'arbitraryWaveform'),
        (c_int32, 'int32_t', 'arbitraryWaveformSize'),
        (c_enum, 'SWEEP_TYPE', 'sweepType'),
        (c_int16, 'int16_t', 'operationType'),
        (c_enum, 'INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps4000SetSigGenBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_int16, 'int16_t', 'waveType'),
        (c_float, 'float', 'startFrequency'),
        (c_float, 'float', 'stopFrequency'),
        (c_float, 'float', 'increment'),
        (c_float, 'float', 'dwellTime'),
        (c_enum, 'SWEEP_TYPE', 'sweepType'),
        (c_int16, 'int16_t', 'operationType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps4000SetSimpleTrigger', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'enable'),
        (c_enum, 'PS4000_CHANNEL', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_enum, 'THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'delay'),
        (c_int16, 'int16_t', 'autoTrigger_ms')),
    ('ps4000SetTriggerChannelConditions', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS4000TriggerConditions), 'TRIGGER_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions')),
    ('ps4000SetTriggerChannelDirections', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelA'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelB'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelC'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelD'),
        (c_enum, 'THRESHOLD_DIRECTION', 'ext'),
        (c_enum, 'THRESHOLD_DIRECTION', 'aux')),
    ('ps4000SetTriggerChannelProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS4000TriggerChannelProperties), 'TRIGGER_CHANNEL_PROPERTIES*', 'channelProperties'),
        (c_int16, 'int16_t', 'nChannelProperties'),
        (c_int16, 'int16_t', 'auxOutputEnable'),
        (c_int32, 'int32_t', 'autoTriggerMilliseconds')),
    ('ps4000SetTriggerDelay', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'delay')),
    ('ps4000SigGenArbitraryMinMaxValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'minArbitraryWaveformValue'),
        (POINTER(c_int16), 'int16_t*', 'maxArbitraryWaveformValue'),
        (POINTER(c_uint32), 'uint32_t*', 'minArbitraryWaveformSize'),
        (POINTER(c_uint32), 'uint32_t*', 'maxArbitraryWaveformSize')),
    ('ps4000SigGenFrequencyToPhase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'frequency'),
        (c_enum, 'INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'bufferLength'),
        (POINTER(c_uint32), 'uint32_t*', 'phase')),
    ('ps4000SigGenSoftwareControl', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'state')),
    ('ps4000Stop', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps4000TriggerWithinPreTriggerSamples', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'state')),
]


# ************************ SDK functions for ps4000aApi ************************


ps4000aApi_funcptrs = [
    ('ps4000aApplyResistanceScaling', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000A_CHANNEL', 'channel'),
        (c_enum, 'PS4000A_RANGE', 'range'),
        (POINTER(c_int16), 'int16_t*', 'bufferMax'),
        (POINTER(c_int16), 'int16_t*', 'bufferMin'),
        (c_uint32, 'uint32_t', 'buffertLth'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps4000aChangePowerSource', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (PICO_STATUS, 'PICO_STATUS', 'powerState')),
    ('ps4000aCloseUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps4000aConnectDetect', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS4000AConnectDetect), 'PS4000A_CONNECT_DETECT*', 'sensor'),
        (c_int16, 'int16_t', 'nSensors')),
    ('ps4000aCurrentPowerSource', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps4000aDeviceMetaData', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'settings'),
        (POINTER(c_int32), 'int32_t*', 'nSettingsLength'),
        (c_enum, 'PS4000A_META_TYPE', 'type'),
        (c_enum, 'PS4000A_META_OPERATION', 'operation'),
        (c_enum, 'PS4000A_META_FORMAT', 'format')),
    ('ps4000aEnumerateUnits', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'count'),
        (POINTER(c_int8), 'int8_t*', 'serials'),
        (POINTER(c_int16), 'int16_t*', 'serialLth')),
    ('ps4000aFlashLed', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'start')),
    ('ps4000aGetAnalogueOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000A_RANGE', 'range'),
        (c_enum, 'PS4000A_COUPLING', 'coupling'),
        (POINTER(c_float), 'float*', 'maximumVoltage'),
        (POINTER(c_float), 'float*', 'minimumVoltage')),
    ('ps4000aGetChannelInformation', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000A_CHANNEL_INFO', 'info'),
        (c_int32, 'int32_t', 'probe'),
        (POINTER(c_int32), 'int32_t*', 'ranges'),
        (POINTER(c_int32), 'int32_t*', 'length')),
    ('ps4000aGetCommonModeOverflow', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint16), 'uint16_t*', 'overflow')),
    ('ps4000aGetMaxDownSampleRatio', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'noOfUnaggreatedSamples'),
        (POINTER(c_uint32), 'uint32_t*', 'maxDownSampleRatio'),
        (c_enum, 'PS4000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps4000aGetMaxSegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'maxSegments')),
    ('ps4000aGetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'nCaptures')),
    ('ps4000aGetNoOfProcessedCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'nProcessedCaptures')),
    ('ps4000aGetStreamingLatestValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (ps4000aStreamingReady, 'ps4000aStreamingReady', 'lpPs'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps4000aGetString', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PICO_STRING_VALUE', 'stringValue'),
        (POINTER(c_int8), 'int8_t*', 'string'),
        (POINTER(c_int32), 'int32_t*', 'stringLength')),
    ('ps4000aGetTimebase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_int32), 'int32_t*', 'timeIntervalNanoseconds'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps4000aGetTimebase2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_float), 'float*', 'timeIntervalNanoseconds'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps4000aGetTriggerTimeOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (POINTER(c_enum), 'PS4000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps4000aGetTriggerTimeOffset64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'time'),
        (POINTER(c_enum), 'PS4000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps4000aGetUnitInfo', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'string'),
        (c_int16, 'int16_t', 'stringLength'),
        (POINTER(c_int16), 'int16_t*', 'requiredSize'),
        (PICO_INFO, 'PICO_INFO', 'info')),
    ('ps4000aGetValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS4000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps4000aGetValuesAsync', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (c_uint32, 'uint32_t', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS4000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_void_p), 'void*', 'lpDataReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps4000aGetValuesBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS4000A_RATIO_MODE', 'downSampleRatioMode'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps4000aGetValuesOverlapped', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS4000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps4000aGetValuesOverlappedBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS4000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps4000aGetValuesTriggerTimeOffsetBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timesUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timesLower'),
        (POINTER(c_enum), 'PS4000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex')),
    ('ps4000aGetValuesTriggerTimeOffsetBulk64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'times'),
        (POINTER(c_enum), 'PS4000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex')),
    ('ps4000aIsLedFlashing', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'status')),
    ('ps4000aIsReady', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'ready')),
    ('ps4000aIsTriggerOrPulseWidthQualifierEnabled', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'triggerEnabled'),
        (POINTER(c_int16), 'int16_t*', 'pulseWidthQualifierEnabled')),
    ('ps4000aMaximumValue', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'value')),
    ('ps4000aMemorySegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'nSegments'),
        (POINTER(c_int32), 'int32_t*', 'nMaxSamples')),
    ('ps4000aMinimumValue', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'value')),
    ('ps4000aNoOfStreamingValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfValues')),
    ('ps4000aOpenUnit', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'serial')),
    ('ps4000aOpenUnitAsync', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'status'),
        (POINTER(c_int8), 'int8_t*', 'serial')),
    ('ps4000aOpenUnitProgress', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'progressPercent'),
        (POINTER(c_int16), 'int16_t*', 'complete')),
    ('ps4000aPingUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps4000aRunBlock', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'noOfPreTriggerSamples'),
        (c_int32, 'int32_t', 'noOfPostTriggerSamples'),
        (c_uint32, 'uint32_t', 'timebase'),
        (POINTER(c_int32), 'int32_t*', 'timeIndisposedMs'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (ps4000aBlockReady, 'ps4000aBlockReady', 'lpReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps4000aRunStreaming', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'sampleInterval'),
        (c_enum, 'PS4000A_TIME_UNITS', 'sampleIntervalTimeUnits'),
        (c_uint32, 'uint32_t', 'maxPreTriggerSamples'),
        (c_uint32, 'uint32_t', 'maxPostTriggerSamples'),
        (c_int16, 'int16_t', 'autoStop'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS4000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'overviewBufferSize')),
    ('ps4000aSetBandwidthFilter', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000A_CHANNEL', 'channel'),
        (c_enum, 'PS4000A_BANDWIDTH_LIMITER', 'bandwidth')),
    ('ps4000aSetChannel', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000A_CHANNEL', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_enum, 'PS4000A_COUPLING', 'type'),
        (c_enum, 'PS4000A_RANGE', 'range'),
        (c_float, 'float', 'analogOffset')),
    ('ps4000aSetChannelLed', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS4000AChannelLedSetting), 'PS4000A_CHANNEL_LED_SETTING*', 'ledStates'),
        (c_uint16, 'uint16_t', 'nLedStates')),
    ('ps4000aSetDataBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000A_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (c_enum, 'PS4000A_RATIO_MODE', 'mode')),
    ('ps4000aSetDataBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000A_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'bufferMax'),
        (POINTER(c_int16), 'int16_t*', 'bufferMin'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (c_enum, 'PS4000A_RATIO_MODE', 'mode')),
    ('ps4000aSetEts', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000A_ETS_MODE', 'mode'),
        (c_int16, 'int16_t', 'etsCycles'),
        (c_int16, 'int16_t', 'etsInterleave'),
        (POINTER(c_int32), 'int32_t*', 'sampleTimePicoseconds')),
    ('ps4000aSetEtsTimeBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps4000aSetEtsTimeBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps4000aSetFrequencyCounter', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000A_CHANNEL', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_enum, 'PS4000A_FREQUENCY_COUNTER_RANGE', 'range'),
        (c_int16, 'int16_t', 'thresholdMajor'),
        (c_int16, 'int16_t', 'thresholdMinor')),
    ('ps4000aSetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'nCaptures')),
    ('ps4000aSetPulseWidthQualifierConditions', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS4000ACondition), 'PS4000A_CONDITION*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'PS4000A_CONDITIONS_INFO', 'info')),
    ('ps4000aSetPulseWidthQualifierProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS4000A_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'lower'),
        (c_uint32, 'uint32_t', 'upper'),
        (c_enum, 'PS4000A_PULSE_WIDTH_TYPE', 'type')),
    ('ps4000aSetSigGenArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (POINTER(c_int16), 'int16_t*', 'arbitraryWaveform'),
        (c_int32, 'int32_t', 'arbitraryWaveformSize'),
        (c_enum, 'PS4000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS4000A_EXTRA_OPERATIONS', 'operation'),
        (c_enum, 'PS4000A_INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS4000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS4000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps4000aSetSigGenBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_enum, 'PS4000A_WAVE_TYPE', 'waveType'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'PS4000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS4000A_EXTRA_OPERATIONS', 'operation'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS4000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS4000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps4000aSetSigGenPropertiesArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (c_enum, 'PS4000A_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS4000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS4000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps4000aSetSigGenPropertiesBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'PS4000A_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS4000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS4000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps4000aSetSimpleTrigger', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'enable'),
        (c_enum, 'PS4000A_CHANNEL', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_enum, 'PS4000A_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'delay'),
        (c_int16, 'int16_t', 'autoTrigger_ms')),
    ('ps4000aSetTriggerChannelConditions', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS4000ACondition), 'PS4000A_CONDITION*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'PS4000A_CONDITIONS_INFO', 'info')),
    ('ps4000aSetTriggerChannelDirections', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS4000ADirection), 'PS4000A_DIRECTION*', 'directions'),
        (c_int16, 'int16_t', 'nDirections')),
    ('ps4000aSetTriggerChannelProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS4000ATriggerChannelProperties), 'PS4000A_TRIGGER_CHANNEL_PROPERTIES*', 'channelProperties'),
        (c_int16, 'int16_t', 'nChannelProperties'),
        (c_int16, 'int16_t', 'auxOutputEnable'),
        (c_int32, 'int32_t', 'autoTriggerMilliseconds')),
    ('ps4000aSetTriggerDelay', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'delay')),
    ('ps4000aSigGenArbitraryMinMaxValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'minArbitraryWaveformValue'),
        (POINTER(c_int16), 'int16_t*', 'maxArbitraryWaveformValue'),
        (POINTER(c_uint32), 'uint32_t*', 'minArbitraryWaveformSize'),
        (POINTER(c_uint32), 'uint32_t*', 'maxArbitraryWaveformSize')),
    ('ps4000aSigGenFrequencyToPhase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'frequency'),
        (c_enum, 'PS4000A_INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'bufferLength'),
        (POINTER(c_uint32), 'uint32_t*', 'phase')),
    ('ps4000aSigGenSoftwareControl', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'state')),
    ('ps4000aStop', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
]


# ************************ SDK functions for ps5000Api ************************


ps5000Api_funcptrs = [
    ('ps5000CloseUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps5000FlashLed', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'start')),
    ('ps5000GetMaxDownSampleRatio', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'noOfUnaggreatedSamples'),
        (POINTER(c_uint32), 'uint32_t*', 'maxDownSampleRatio'),
        (c_int16, 'int16_t', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps5000GetStreamingLatestValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (ps5000StreamingReady, 'ps5000StreamingReady', 'lpPs'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps5000GetTimebase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_int32), 'int32_t*', 'timeIntervalNanoseconds'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps5000GetTimebase2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_float), 'float*', 'timeIntervalNanoseconds'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps5000GetTriggerTimeOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (POINTER(c_enum), 'PS5000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps5000GetTriggerTimeOffset64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'time'),
        (POINTER(c_enum), 'PS5000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'segmentIndex')),
    ('ps5000GetUnitInfo', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'string'),
        (c_int16, 'int16_t', 'stringLength'),
        (POINTER(c_int16), 'int16_t*', 'requiredSize'),
        (PICO_INFO, 'PICO_INFO', 'info')),
    ('ps5000GetValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_int16, 'int16_t', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps5000GetValuesAsync', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (c_uint32, 'uint32_t', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_int16, 'int16_t', 'downSampleRatioMode'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (POINTER(c_void_p), 'void*', 'lpDataReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps5000GetValuesBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps5000GetValuesTriggerTimeOffsetBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timesUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timesLower'),
        (POINTER(c_enum), 'PS5000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex')),
    ('ps5000GetValuesTriggerTimeOffsetBulk64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'times'),
        (POINTER(c_enum), 'PS5000_TIME_UNITS*', 'timeUnits'),
        (c_uint16, 'uint16_t', 'fromSegmentIndex'),
        (c_uint16, 'uint16_t', 'toSegmentIndex')),
    ('ps5000IsLedFlashing', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'status')),
    ('ps5000IsReady', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'ready')),
    ('ps5000IsTriggerOrPulseWidthQualifierEnabled', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'triggerEnabled'),
        (POINTER(c_int16), 'int16_t*', 'pulseWidthQualifierEnabled')),
    ('ps5000MemorySegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint16, 'uint16_t', 'nSegments'),
        (POINTER(c_int32), 'int32_t*', 'nMaxSamples')),
    ('ps5000NoOfStreamingValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfValues')),
    ('ps5000OpenUnit', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle')),
    ('ps5000OpenUnitAsync', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'status')),
    ('ps5000OpenUnitProgress', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'progressPercent'),
        (POINTER(c_int16), 'int16_t*', 'complete')),
    ('ps5000PingUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps5000RunBlock', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'noOfPreTriggerSamples'),
        (c_int32, 'int32_t', 'noOfPostTriggerSamples'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'timeIndisposedMs'),
        (c_uint16, 'uint16_t', 'segmentIndex'),
        (ps5000BlockReady, 'ps5000BlockReady', 'lpReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps5000RunStreaming', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'sampleInterval'),
        (c_enum, 'PS5000_TIME_UNITS', 'sampleIntervalTimeUnits'),
        (c_uint32, 'uint32_t', 'maxPreTriggerSamples'),
        (c_uint32, 'uint32_t', 'maxPostPreTriggerSamples'),
        (c_int16, 'int16_t', 'autoStop'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_uint32, 'uint32_t', 'overviewBufferSize')),
    ('ps5000SetChannel', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000_CHANNEL', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_int16, 'int16_t', 'dc'),
        (c_enum, 'PS5000_RANGE', 'range')),
    ('ps5000SetDataBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps5000SetDataBufferBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_uint16, 'uint16_t', 'waveform')),
    ('ps5000SetDataBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'bufferMax'),
        (POINTER(c_int16), 'int16_t*', 'bufferMin'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps5000SetEts', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000_ETS_MODE', 'mode'),
        (c_int16, 'int16_t', 'etsCycles'),
        (c_int16, 'int16_t', 'etsInterleave'),
        (POINTER(c_int32), 'int32_t*', 'sampleTimePicoseconds')),
    ('ps5000SetEtsTimeBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps5000SetEtsTimeBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps5000SetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint16, 'uint16_t', 'nCaptures')),
    ('ps5000SetPulseWidthQualifier', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS5000PwqConditions), 'PWQ_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'lower'),
        (c_uint32, 'uint32_t', 'upper'),
        (c_enum, 'PULSE_WIDTH_TYPE', 'type')),
    ('ps5000SetSigGenArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (POINTER(c_int16), 'int16_t*', 'arbitraryWaveform'),
        (c_int32, 'int32_t', 'arbitraryWaveformSize'),
        (c_enum, 'SWEEP_TYPE', 'sweepType'),
        (c_int16, 'int16_t', 'whiteNoise'),
        (c_enum, 'INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps5000SetSigGenBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_int16, 'int16_t', 'waveType'),
        (c_float, 'float', 'startFrequency'),
        (c_float, 'float', 'stopFrequency'),
        (c_float, 'float', 'increment'),
        (c_float, 'float', 'dwellTime'),
        (c_enum, 'SWEEP_TYPE', 'sweepType'),
        (c_int16, 'int16_t', 'whiteNoise'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps5000SetSigGenBuiltInV2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_int16, 'int16_t', 'waveType'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'SWEEP_TYPE', 'sweepType'),
        (c_int16, 'int16_t', 'whiteNoise'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps5000SetSimpleTrigger', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'enable'),
        (c_enum, 'PS5000_CHANNEL', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_enum, 'THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'delay'),
        (c_int16, 'int16_t', 'autoTrigger_ms')),
    ('ps5000SetTriggerChannelConditions', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS5000TriggerConditions), 'TRIGGER_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions')),
    ('ps5000SetTriggerChannelDirections', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelA'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelB'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelC'),
        (c_enum, 'THRESHOLD_DIRECTION', 'channelD'),
        (c_enum, 'THRESHOLD_DIRECTION', 'ext'),
        (c_enum, 'THRESHOLD_DIRECTION', 'aux')),
    ('ps5000SetTriggerChannelProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS5000TriggerChannelProperties), 'TRIGGER_CHANNEL_PROPERTIES*', 'channelProperties'),
        (c_int16, 'int16_t', 'nChannelProperties'),
        (c_int16, 'int16_t', 'auxOutputEnable'),
        (c_int32, 'int32_t', 'autoTriggerMilliseconds')),
    ('ps5000SetTriggerDelay', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'delay')),
    ('ps5000SigGenArbitraryMinMaxValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'minArbitraryWaveformValue'),
        (POINTER(c_int16), 'int16_t*', 'maxArbitraryWaveformValue'),
        (POINTER(c_uint32), 'uint32_t*', 'minArbitraryWaveformSize'),
        (POINTER(c_uint32), 'uint32_t*', 'maxArbitraryWaveformSize')),
    ('ps5000SigGenFrequencyToPhase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'frequency'),
        (c_enum, 'INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'bufferLength'),
        (POINTER(c_uint32), 'uint32_t*', 'phase')),
    ('ps5000SigGenSoftwareControl', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'state')),
    ('ps5000Stop', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
]


# ************************ SDK functions for ps5000aApi ************************


ps5000aApi_funcptrs = [
    ('ps5000aChangePowerSource', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (PICO_STATUS, 'PICO_STATUS', 'powerState')),
    ('ps5000aCloseUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps5000aCurrentPowerSource', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps5000aEnumerateUnits', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'count'),
        (POINTER(c_int8), 'int8_t*', 'serials'),
        (POINTER(c_int16), 'int16_t*', 'serialLth')),
    ('ps5000aFlashLed', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'start')),
    ('ps5000aGetAnalogueOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000A_RANGE', 'range'),
        (c_enum, 'PS5000A_COUPLING', 'coupling'),
        (POINTER(c_float), 'float*', 'maximumVoltage'),
        (POINTER(c_float), 'float*', 'minimumVoltage')),
    ('ps5000aGetChannelInformation', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000A_CHANNEL_INFO', 'info'),
        (c_int32, 'int32_t', 'probe'),
        (POINTER(c_int32), 'int32_t*', 'ranges'),
        (POINTER(c_int32), 'int32_t*', 'length'),
        (c_int32, 'int32_t', 'channels')),
    ('ps5000aGetDeviceResolution', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_enum), 'PS5000A_DEVICE_RESOLUTION*', 'resolution')),
    ('ps5000aGetMaxDownSampleRatio', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'noOfUnaggreatedSamples'),
        (POINTER(c_uint32), 'uint32_t*', 'maxDownSampleRatio'),
        (c_enum, 'PS5000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps5000aGetMaxSegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'maxSegments')),
    ('ps5000aGetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'nCaptures')),
    ('ps5000aGetNoOfProcessedCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'nProcessedCaptures')),
    ('ps5000aGetStreamingLatestValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (ps5000aStreamingReady, 'ps5000aStreamingReady', 'lpPs'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps5000aGetTimebase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_int32), 'int32_t*', 'timeIntervalNanoseconds'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps5000aGetTimebase2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int32, 'int32_t', 'noSamples'),
        (POINTER(c_float), 'float*', 'timeIntervalNanoseconds'),
        (POINTER(c_int32), 'int32_t*', 'maxSamples'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps5000aGetTriggerInfoBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS5000ATriggerInfo), 'PS5000A_TRIGGER_INFO*', 'triggerInfo'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex')),
    ('ps5000aGetTriggerTimeOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (POINTER(c_enum), 'PS5000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps5000aGetTriggerTimeOffset64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'time'),
        (POINTER(c_enum), 'PS5000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps5000aGetUnitInfo', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'string'),
        (c_int16, 'int16_t', 'stringLength'),
        (POINTER(c_int16), 'int16_t*', 'requiredSize'),
        (PICO_INFO, 'PICO_INFO', 'info')),
    ('ps5000aGetValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS5000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps5000aGetValuesAsync', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (c_uint32, 'uint32_t', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS5000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_void_p), 'void*', 'lpDataReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps5000aGetValuesBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS5000A_RATIO_MODE', 'downSampleRatioMode'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps5000aGetValuesOverlapped', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS5000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps5000aGetValuesOverlappedBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS5000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps5000aGetValuesTriggerTimeOffsetBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timesUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timesLower'),
        (POINTER(c_enum), 'PS5000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex')),
    ('ps5000aGetValuesTriggerTimeOffsetBulk64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'times'),
        (POINTER(c_enum), 'PS5000A_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex')),
    ('ps5000aIsLedFlashing', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'status')),
    ('ps5000aIsReady', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'ready')),
    ('ps5000aIsTriggerOrPulseWidthQualifierEnabled', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'triggerEnabled'),
        (POINTER(c_int16), 'int16_t*', 'pulseWidthQualifierEnabled')),
    ('ps5000aMaximumValue', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'value')),
    ('ps5000aMemorySegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'nSegments'),
        (POINTER(c_int32), 'int32_t*', 'nMaxSamples')),
    ('ps5000aMinimumValue', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'value')),
    ('ps5000aNoOfStreamingValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfValues')),
    ('ps5000aOpenUnit', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'serial'),
        (c_enum, 'PS5000A_DEVICE_RESOLUTION', 'resolution')),
    ('ps5000aOpenUnitAsync', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'status'),
        (POINTER(c_int8), 'int8_t*', 'serial'),
        (c_enum, 'PS5000A_DEVICE_RESOLUTION', 'resolution')),
    ('ps5000aOpenUnitProgress', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'progressPercent'),
        (POINTER(c_int16), 'int16_t*', 'complete')),
    ('ps5000aPingUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps5000aRunBlock', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'noOfPreTriggerSamples'),
        (c_int32, 'int32_t', 'noOfPostTriggerSamples'),
        (c_uint32, 'uint32_t', 'timebase'),
        (POINTER(c_int32), 'int32_t*', 'timeIndisposedMs'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (ps5000aBlockReady, 'ps5000aBlockReady', 'lpReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps5000aRunStreaming', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'sampleInterval'),
        (c_enum, 'PS5000A_TIME_UNITS', 'sampleIntervalTimeUnits'),
        (c_uint32, 'uint32_t', 'maxPreTriggerSamples'),
        (c_uint32, 'uint32_t', 'maxPostTriggerSamples'),
        (c_int16, 'int16_t', 'autoStop'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS5000A_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'overviewBufferSize')),
    ('ps5000aSetBandwidthFilter', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000A_CHANNEL', 'channel'),
        (c_enum, 'PS5000A_BANDWIDTH_LIMITER', 'bandwidth')),
    ('ps5000aSetChannel', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000A_CHANNEL', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_enum, 'PS5000A_COUPLING', 'type'),
        (c_enum, 'PS5000A_RANGE', 'range'),
        (c_float, 'float', 'analogOffset')),
    ('ps5000aSetDataBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000A_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (c_enum, 'PS5000A_RATIO_MODE', 'mode')),
    ('ps5000aSetDataBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000A_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'bufferMax'),
        (POINTER(c_int16), 'int16_t*', 'bufferMin'),
        (c_int32, 'int32_t', 'bufferLth'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (c_enum, 'PS5000A_RATIO_MODE', 'mode')),
    ('ps5000aSetDeviceResolution', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000A_DEVICE_RESOLUTION', 'resolution')),
    ('ps5000aSetEts', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000A_ETS_MODE', 'mode'),
        (c_int16, 'int16_t', 'etsCycles'),
        (c_int16, 'int16_t', 'etsInterleave'),
        (POINTER(c_int32), 'int32_t*', 'sampleTimePicoseconds')),
    ('ps5000aSetEtsTimeBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'buffer'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps5000aSetEtsTimeBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (c_int32, 'int32_t', 'bufferLth')),
    ('ps5000aSetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'nCaptures')),
    ('ps5000aSetPulseWidthQualifier', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS5000APwqConditions), 'PS5000A_PWQ_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'PS5000A_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'lower'),
        (c_uint32, 'uint32_t', 'upper'),
        (c_enum, 'PS5000A_PULSE_WIDTH_TYPE', 'type')),
    ('ps5000aSetSigGenArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (POINTER(c_int16), 'int16_t*', 'arbitraryWaveform'),
        (c_int32, 'int32_t', 'arbitraryWaveformSize'),
        (c_enum, 'PS5000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS5000A_EXTRA_OPERATIONS', 'operation'),
        (c_enum, 'PS5000A_INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS5000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS5000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps5000aSetSigGenBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_enum, 'PS5000A_WAVE_TYPE', 'waveType'),
        (c_float, 'float', 'startFrequency'),
        (c_float, 'float', 'stopFrequency'),
        (c_float, 'float', 'increment'),
        (c_float, 'float', 'dwellTime'),
        (c_enum, 'PS5000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS5000A_EXTRA_OPERATIONS', 'operation'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS5000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS5000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps5000aSetSigGenBuiltInV2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_enum, 'PS5000A_WAVE_TYPE', 'waveType'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'PS5000A_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS5000A_EXTRA_OPERATIONS', 'operation'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS5000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS5000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps5000aSetSigGenPropertiesArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (c_enum, 'PS5000A_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS5000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS5000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps5000aSetSigGenPropertiesBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'PS5000A_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS5000A_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS5000A_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps5000aSetSimpleTrigger', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'enable'),
        (c_enum, 'PS5000A_CHANNEL', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_enum, 'PS5000A_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'delay'),
        (c_int16, 'int16_t', 'autoTrigger_ms')),
    ('ps5000aSetTriggerChannelConditions', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS5000ATriggerConditions), 'PS5000A_TRIGGER_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions')),
    ('ps5000aSetTriggerChannelDirections', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000A_THRESHOLD_DIRECTION', 'channelA'),
        (c_enum, 'PS5000A_THRESHOLD_DIRECTION', 'channelB'),
        (c_enum, 'PS5000A_THRESHOLD_DIRECTION', 'channelC'),
        (c_enum, 'PS5000A_THRESHOLD_DIRECTION', 'channelD'),
        (c_enum, 'PS5000A_THRESHOLD_DIRECTION', 'ext'),
        (c_enum, 'PS5000A_THRESHOLD_DIRECTION', 'aux')),
    ('ps5000aSetTriggerChannelProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS5000ATriggerChannelProperties), 'PS5000A_TRIGGER_CHANNEL_PROPERTIES*', 'channelProperties'),
        (c_int16, 'int16_t', 'nChannelProperties'),
        (c_int16, 'int16_t', 'auxOutputEnable'),
        (c_int32, 'int32_t', 'autoTriggerMilliseconds')),
    ('ps5000aSetTriggerDelay', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'delay')),
    ('ps5000aSigGenArbitraryMinMaxValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'minArbitraryWaveformValue'),
        (POINTER(c_int16), 'int16_t*', 'maxArbitraryWaveformValue'),
        (POINTER(c_uint32), 'uint32_t*', 'minArbitraryWaveformSize'),
        (POINTER(c_uint32), 'uint32_t*', 'maxArbitraryWaveformSize')),
    ('ps5000aSigGenFrequencyToPhase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'frequency'),
        (c_enum, 'PS5000A_INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'bufferLength'),
        (POINTER(c_uint32), 'uint32_t*', 'phase')),
    ('ps5000aSigGenSoftwareControl', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'state')),
    ('ps5000aStop', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps5000aTriggerWithinPreTriggerSamples', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS5000A_TRIGGER_WITHIN_PRE_TRIGGER', 'state')),
]


# ************************ SDK functions for ps6000Api ************************


ps6000Api_funcptrs = [
    ('ps6000CloseUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps6000EnumerateUnits', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'count'),
        (POINTER(c_int8), 'int8_t*', 'serials'),
        (POINTER(c_int16), 'int16_t*', 'serialLth')),
    ('ps6000FlashLed', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'start')),
    ('ps6000GetAnalogueOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS6000_RANGE', 'range'),
        (c_enum, 'PS6000_COUPLING', 'coupling'),
        (POINTER(c_float), 'float*', 'maximumVoltage'),
        (POINTER(c_float), 'float*', 'minimumVoltage')),
    ('ps6000GetMaxDownSampleRatio', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'noOfUnaggreatedSamples'),
        (POINTER(c_uint32), 'uint32_t*', 'maxDownSampleRatio'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps6000GetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'nCaptures')),
    ('ps6000GetNoOfProcessedCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'nProcessedCaptures')),
    ('ps6000GetStreamingLatestValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (ps6000StreamingReady, 'ps6000StreamingReady', 'lpPs'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps6000GetTimebase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_uint32, 'uint32_t', 'noSamples'),
        (POINTER(c_int32), 'int32_t*', 'timeIntervalNanoseconds'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_uint32), 'uint32_t*', 'maxSamples'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps6000GetTimebase2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_uint32, 'uint32_t', 'noSamples'),
        (POINTER(c_float), 'float*', 'timeIntervalNanoseconds'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_uint32), 'uint32_t*', 'maxSamples'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps6000GetTriggerTimeOffset', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (POINTER(c_enum), 'PS6000_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps6000GetTriggerTimeOffset64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'time'),
        (POINTER(c_enum), 'PS6000_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'segmentIndex')),
    ('ps6000GetUnitInfo', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'string'),
        (c_int16, 'int16_t', 'stringLength'),
        (POINTER(c_int16), 'int16_t*', 'requiredSize'),
        (PICO_INFO, 'PICO_INFO', 'info')),
    ('ps6000GetValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps6000GetValuesAsync', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (c_uint32, 'uint32_t', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_void_p), 'void*', 'lpDataReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps6000GetValuesBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps6000GetValuesBulkAsyc', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps6000GetValuesOverlapped', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps6000GetValuesOverlappedBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'startIndex'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfSamples'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex'),
        (POINTER(c_int16), 'int16_t*', 'overflow')),
    ('ps6000GetValuesTriggerTimeOffsetBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timesUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timesLower'),
        (POINTER(c_enum), 'PS6000_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex')),
    ('ps6000GetValuesTriggerTimeOffsetBulk64', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'times'),
        (POINTER(c_enum), 'PS6000_TIME_UNITS*', 'timeUnits'),
        (c_uint32, 'uint32_t', 'fromSegmentIndex'),
        (c_uint32, 'uint32_t', 'toSegmentIndex')),
    ('ps6000IsReady', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'ready')),
    ('ps6000IsTriggerOrPulseWidthQualifierEnabled', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'triggerEnabled'),
        (POINTER(c_int16), 'int16_t*', 'pulseWidthQualifierEnabled')),
    ('ps6000MemorySegments', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'nSegments'),
        (POINTER(c_uint32), 'uint32_t*', 'nMaxSamples')),
    ('ps6000NoOfStreamingValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'noOfValues')),
    ('ps6000OpenUnit', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int8), 'int8_t*', 'serial')),
    ('ps6000OpenUnitAsync', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'status'),
        (POINTER(c_int8), 'int8_t*', 'serial')),
    ('ps6000OpenUnitProgress', PICO_STATUS, True,
        (POINTER(c_int16), 'int16_t*', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'progressPercent'),
        (POINTER(c_int16), 'int16_t*', 'complete')),
    ('ps6000PingUnit', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
    ('ps6000RunBlock', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'noOfPreTriggerSamples'),
        (c_uint32, 'uint32_t', 'noOfPostTriggerSamples'),
        (c_uint32, 'uint32_t', 'timebase'),
        (c_int16, 'int16_t', 'oversample'),
        (POINTER(c_int32), 'int32_t*', 'timeIndisposedMs'),
        (c_uint32, 'uint32_t', 'segmentIndex'),
        (ps6000BlockReady, 'ps6000BlockReady', 'lpReady'),
        (POINTER(c_void_p), 'void*', 'pParameter')),
    ('ps6000RunStreaming', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'sampleInterval'),
        (c_enum, 'PS6000_TIME_UNITS', 'sampleIntervalTimeUnits'),
        (c_uint32, 'uint32_t', 'maxPreTriggerSamples'),
        (c_uint32, 'uint32_t', 'maxPostPreTriggerSamples'),
        (c_int16, 'int16_t', 'autoStop'),
        (c_uint32, 'uint32_t', 'downSampleRatio'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode'),
        (c_uint32, 'uint32_t', 'overviewBufferSize')),
    ('ps6000SetChannel', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS6000_CHANNEL', 'channel'),
        (c_int16, 'int16_t', 'enabled'),
        (c_enum, 'PS6000_COUPLING', 'type'),
        (c_enum, 'PS6000_RANGE', 'range'),
        (c_float, 'float', 'analogueOffset'),
        (c_enum, 'PS6000_BANDWIDTH_LIMITER', 'bandwidth')),
    ('ps6000SetDataBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS6000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_uint32, 'uint32_t', 'bufferLth'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode')),
    ('ps6000SetDataBufferBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS6000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'buffer'),
        (c_uint32, 'uint32_t', 'bufferLth'),
        (c_uint32, 'uint32_t', 'waveform'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode')),
    ('ps6000SetDataBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS6000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'bufferMax'),
        (POINTER(c_int16), 'int16_t*', 'bufferMin'),
        (c_uint32, 'uint32_t', 'bufferLth'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode')),
    ('ps6000SetDataBuffersBulk', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS6000_CHANNEL', 'channel'),
        (POINTER(c_int16), 'int16_t*', 'bufferMax'),
        (POINTER(c_int16), 'int16_t*', 'bufferMin'),
        (c_uint32, 'uint32_t', 'bufferLth'),
        (c_uint32, 'uint32_t', 'waveform'),
        (c_enum, 'PS6000_RATIO_MODE', 'downSampleRatioMode')),
    ('ps6000SetEts', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS6000_ETS_MODE', 'mode'),
        (c_int16, 'int16_t', 'etsCycles'),
        (c_int16, 'int16_t', 'etsInterleave'),
        (POINTER(c_int32), 'int32_t*', 'sampleTimePicoseconds')),
    ('ps6000SetEtsTimeBuffer', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int64), 'int64_t*', 'buffer'),
        (c_uint32, 'uint32_t', 'bufferLth')),
    ('ps6000SetEtsTimeBuffers', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_uint32), 'uint32_t*', 'timeUpper'),
        (POINTER(c_uint32), 'uint32_t*', 'timeLower'),
        (c_uint32, 'uint32_t', 'bufferLth')),
    ('ps6000SetExternalClock', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS6000_EXTERNAL_FREQUENCY', 'frequency'),
        (c_int16, 'int16_t', 'threshold')),
    ('ps6000SetNoOfCaptures', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'nCaptures')),
    ('ps6000SetPulseWidthQualifier', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS6000PwqConditions), 'PS6000_PWQ_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions'),
        (c_enum, 'PS6000_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'lower'),
        (c_uint32, 'uint32_t', 'upper'),
        (c_enum, 'PS6000_PULSE_WIDTH_TYPE', 'type')),
    ('ps6000SetSigGenArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (POINTER(c_int16), 'int16_t*', 'arbitraryWaveform'),
        (c_int32, 'int32_t', 'arbitraryWaveformSize'),
        (c_enum, 'PS6000_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS6000_EXTRA_OPERATIONS', 'operation'),
        (c_enum, 'PS6000_INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS6000_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS6000_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps6000SetSigGenBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_int16, 'int16_t', 'waveType'),
        (c_float, 'float', 'startFrequency'),
        (c_float, 'float', 'stopFrequency'),
        (c_float, 'float', 'increment'),
        (c_float, 'float', 'dwellTime'),
        (c_enum, 'PS6000_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS6000_EXTRA_OPERATIONS', 'operation'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS6000_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS6000_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps6000SetSigGenBuiltInV2', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_int16, 'int16_t', 'waveType'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'PS6000_SWEEP_TYPE', 'sweepType'),
        (c_enum, 'PS6000_EXTRA_OPERATIONS', 'operation'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS6000_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS6000_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps6000SetSigGenPropertiesArbitrary', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_uint32, 'uint32_t', 'startDeltaPhase'),
        (c_uint32, 'uint32_t', 'stopDeltaPhase'),
        (c_uint32, 'uint32_t', 'deltaPhaseIncrement'),
        (c_uint32, 'uint32_t', 'dwellCount'),
        (c_enum, 'PS6000_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS6000_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS6000_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps6000SetSigGenPropertiesBuiltIn', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int32, 'int32_t', 'offsetVoltage'),
        (c_uint32, 'uint32_t', 'pkToPk'),
        (c_double, 'double', 'startFrequency'),
        (c_double, 'double', 'stopFrequency'),
        (c_double, 'double', 'increment'),
        (c_double, 'double', 'dwellTime'),
        (c_enum, 'PS6000_SWEEP_TYPE', 'sweepType'),
        (c_uint32, 'uint32_t', 'shots'),
        (c_uint32, 'uint32_t', 'sweeps'),
        (c_enum, 'PS6000_SIGGEN_TRIG_TYPE', 'triggerType'),
        (c_enum, 'PS6000_SIGGEN_TRIG_SOURCE', 'triggerSource'),
        (c_int16, 'int16_t', 'extInThreshold')),
    ('ps6000SetSimpleTrigger', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'enable'),
        (c_enum, 'PS6000_CHANNEL', 'source'),
        (c_int16, 'int16_t', 'threshold'),
        (c_enum, 'PS6000_THRESHOLD_DIRECTION', 'direction'),
        (c_uint32, 'uint32_t', 'delay'),
        (c_int16, 'int16_t', 'autoTrigger_ms')),
    ('ps6000SetTriggerChannelConditions', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS6000TriggerConditions), 'PS6000_TRIGGER_CONDITIONS*', 'conditions'),
        (c_int16, 'int16_t', 'nConditions')),
    ('ps6000SetTriggerChannelDirections', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_enum, 'PS6000_THRESHOLD_DIRECTION', 'channelA'),
        (c_enum, 'PS6000_THRESHOLD_DIRECTION', 'channelB'),
        (c_enum, 'PS6000_THRESHOLD_DIRECTION', 'channelC'),
        (c_enum, 'PS6000_THRESHOLD_DIRECTION', 'channelD'),
        (c_enum, 'PS6000_THRESHOLD_DIRECTION', 'ext'),
        (c_enum, 'PS6000_THRESHOLD_DIRECTION', 'aux')),
    ('ps6000SetTriggerChannelProperties', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(PS6000TriggerChannelProperties), 'PS6000_TRIGGER_CHANNEL_PROPERTIES*', 'channelProperties'),
        (c_int16, 'int16_t', 'nChannelProperties'),
        (c_int16, 'int16_t', 'auxOutputEnable'),
        (c_int32, 'int32_t', 'autoTriggerMilliseconds')),
    ('ps6000SetTriggerDelay', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'delay')),
    ('ps6000SetWaveformLimiter', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_uint32, 'uint32_t', 'nWaveformsPerSecond')),
    ('ps6000SigGenArbitraryMinMaxValues', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (POINTER(c_int16), 'int16_t*', 'minArbitraryWaveformValue'),
        (POINTER(c_int16), 'int16_t*', 'maxArbitraryWaveformValue'),
        (POINTER(c_uint32), 'uint32_t*', 'minArbitraryWaveformSize'),
        (POINTER(c_uint32), 'uint32_t*', 'maxArbitraryWaveformSize')),
    ('ps6000SigGenFrequencyToPhase', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_double, 'double', 'frequency'),
        (c_enum, 'PS6000_INDEX_MODE', 'indexMode'),
        (c_uint32, 'uint32_t', 'bufferLength'),
        (POINTER(c_uint32), 'uint32_t*', 'phase')),
    ('ps6000SigGenSoftwareControl', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle'),
        (c_int16, 'int16_t', 'state')),
    ('ps6000Stop', PICO_STATUS, True,
        (c_int16, 'int16_t', 'handle')),
]


